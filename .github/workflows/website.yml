name: Build & deploy website

on:
  push:
    # NOTE: We need to deploy on changes to all branches that affect the build
    branches:
      - "main"
      - "release-*"
    paths:
      - "**.lock"
      - "**.nix"
      - "docs/**"
      - "modules/**"

      - "package.json"
      - "pnpm-lock.yaml"
      - "tsconfig.json"
      - "astro.config.ts"

      - ".github/workflows/website.yml"
  pull_request:
    # But exclude non-main branches on PRs since we already check the JSON files we
    # fetch from them, and don't actually need to deploy
    branches: [main]
    paths:
      - "**.lock"
      - "**.nix"
      - "docs/**"
      - "modules/**"

      - "package.json"
      - "pnpm-lock.yaml"
      - "tsconfig.json"
      - "astro.config.ts"

      - ".github/workflows/website.yml"
  workflow_dispatch:

jobs:
  build:
    name: Build site

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ (github.event_name == 'push' && github.ref_name != 'main') && 'main' || '' }}

      - name: Install Nix
        uses: cachix/install-nix-action@v31

        # TODO(@getchoo): Use merge commits here directly instead of the working directory?
        # Assuming working directory == main branch Isn't Great
        # Plus it'd make it pretty easy to run this on PR builds for release branches
      - name: Update options data
        run: |
          ./dev/update-docs-data.sh

      - name: Install dependencies
        run: |
          nix develop .#ci --command pnpm install

      - name: Run build
        run: |
          nix develop .#ci --command nrr build

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/

  deploy:
    name: Deploy website

    needs: build

    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}

    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    permissions:
      id-token: write
      pages: write

    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
