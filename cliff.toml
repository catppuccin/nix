# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration
#
# To bump the changelog:
#
# ```console
# $ TAG="x.y.z"
# $ TAG=v"$TAG"
# $ git-cliff --github-token (gh auth token) --prepend CHANGELOG.md --tag "$TAG" --unreleased
# ```

[changelog]
header = """
# Changelog\n
"""

body = """
{% if version -%}
  ## [{{ version | trim_start_matches(pat="v") }}](https://github.com/catppuccin/nix/releases/tag/{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
{% else -%}
  ## [Unreleased]
{% endif -%}

{% for group, commits in commits | group_by(attribute="group") %}
  ### {{ group | striptags | trim | upper_first }}

  {% for commit in commits | filter(attribute="scope") | sort(attribute="scope") -%}
    - **{{ commit.scope }}**: {{ commit.message | trim }}\
      {%- if commit.remote.username %} by @{{ commit.remote.username }}{% endif %}
  {% endfor -%}

  {% for commit in commits -%}
    {% if commit.scope -%}
    {% else -%}
      - {{ commit.message | trim }}\
        {% if commit.remote.username %} by @{{ commit.remote.username }}{% endif %}
    {% endif -%}
  {% endfor -%}
{% endfor -%}

{% if github.contributors | filter(attribute="is_first_time", value=true) | length != 0 %}
  ### New Contributors

{% endif -%}

{% for contributor in github.contributors | filter(attribute="username") | filter(attribute="is_first_time", value=true) | sort(attribute="username") -%}
  * @{{ contributor.username }} made their first contribution\
    {% if contributor.pr_number %} in #{{ contributor.pr_number }}{% endif %}
{% endfor %}\n
"""

footer = """
<!-- generated by git-cliff -->
"""

trim = true

postprocessors = [
  # Issues/PR
  { pattern = "#([0-9]+)", replace = "[#${1}](https://github.com/catppuccin/nix/issues/${1})" },
  # Commits
  { pattern = "([a-f0-9]{7})", replace = "[${1}](https://github.com/catppuccin/nix/commit/${1})" },
  # GitHub Users
  { pattern = " @([a-zA-Z0-9-_]+)", replace = " [@${1}](https://github.com/${1})" }
]

[git]
commit_preprocessors = [
  # Remove issue numbers
  { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "" },
]

commit_parsers = [
  # This commit message isn't properly escaped
  { sha = "aa3a9816e9d6bc361ab1156f1e7a850fc0b5f4f8", skip = true },

  # Ignore bot PRs
  { field = "author.name", pattern = "\\[bot\\]", skip = true },

  # Ignore some commits not matched by the above
  { message = "^docs: update docs for( ([a-f0-9]{7}))?$", skip = true },
  { message = "^style: format ([a-f0-9]{7})?$", skip = true },

  # Regular matches
  { message = "^(.*)!:", group = "<!-- 0 -->üö® Breaking Changes" },
  { message = "^feat", group = "<!-- 1 -->üöÄ Features" },
  { message = "^fix", group = "<!-- 2 -->üêõ Bug Fixes" },
  { message = "^revert", group = "<!-- 3 --> ‚è™ Reverted"},
  { message = "^docs", group = "<!-- 4 -->üìö Documentation" },
]

filter_commits = true

[remote.github]
owner = "catppuccin"
repo = "nix"
